{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/Delete.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","webpack:///./node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","webpack:///./src/pages/calc/nightmare/timer-table.tsx"],"names":["_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","props","ref","children","classes","className","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","onChange","onClick","selected","_props$size","size","other","ButtonBase","root","concat","capitalize","focusRipple","event","isDefaultPrevented","label","withStyles","theme","typography","button","boxSizing","borderRadius","shape","padding","border","palette","action","active","color","backgroundColor","borderLeft","marginLeft","textDecoration","text","primary","width","display","alignItems","justifyContent","sizeSmall","fontSize","pxToRem","sizeLarge","name","isValueSelected","candidate","undefined","Array","isArray","indexOf","ToggleButtonGroup","_props$exclusive","exclusive","_props$orientation","orientation","handleChange","buttonValue","newValue","index","slice","splice","handleExclusiveChange","role","vertical","map","child","grouped","flexDirection","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","marginTop","borderTop","mareTime","ready","useStyles","makeStyles","createStyles","flexWrap","margin","filter","flex","timerPanel","historyPanel","position","timerTable","timerLabelCell","flexGrow","height","background","textAlign","fontWeight","timerIconCell","timeDisplayCell","settingTriggerTable","settingStartPanel","settingnightmarePanel","settingOptionalTable","minWidth","settingClearPanel","settingTable","marginBottom","timerButton","nightmareButtonIcon","TimerTable","square","variant","MaretimerTable","TimerSettingTable","aria-label","title","arrow","data-id","startIcon","startButtonDisabled","optButtonDisabled","handleNightmareButton","nowZeroDate","now","audio_notification","Audio","useState","coloCount","setColoCount","readyCount","setReadyCount","mareCount","setMareCount","startActivate","setStartActivate","triggers","setTriggers","setStartButtonDisabled","setOptButtonDisabled","useEffect","startTime","getCloseColoTime","colo_countdown_timer","setTimeout","colo_countdown","clearTimeout","time","Number","clearInterval","getTimeDate","getTimeText","date","hh","mm","ss","dd","dateValue","dateArray","getCountdownDate","endDate","Date","getEndDate","endtime","count","tick_tock","ready_countdown_bgcolorflg","mare_countdown_bgcolorflg","ready_countdown","m","s","mare_countdown","coloCountText","readyCountText","mareCountText","handleTriggers","handleStartButton","ready_countdown_timer","mare_countdown_timer","handleClearButton","initTime","e","mareReady","mareActivate","setInterval"],"mappings":"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","file":"component---src-pages-calc-nightmare-timer-table-tsx-1c03d98673e35943de46.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent ButtonBase\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      padding: 11,\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { Button, Paper, Tooltip, Typography } from '@material-ui/core';\r\nimport { SINoImage } from 'src/components';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport NightmareTabs from './nightmare-tabs';\r\n\r\n//タイマー保持\r\nlet colo_countdown_timer: NodeJS.Timeout,\r\n    mare_countdown_timer: NodeJS.Timeout,\r\n    ready_countdown_timer: NodeJS.Timeout,\r\n    ready_tick_timer: NodeJS.Timeout,\r\n    mare_tick_timer : NodeJS.Timeout;\r\n//メア時間保持\r\nlet mareTime = [0, 0];\r\n//タイマー測定開始時間保持\r\nlet ready = new Date();\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: '5px',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      flexWrap: 'nowrap',\r\n      justifyContent: 'center',\r\n      alignItems: 'stretch',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n      '& h2': {\r\n        fontSize: '1.8rem',\r\n        margin: '10px auto',\r\n        width: '100%',\r\n      },\r\n      '& .MuiToggleButton-root': {\r\n        padding: '2px',\r\n        '&:hover': {\r\n          backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n          filter: 'invert(5%)',\r\n        },\r\n        '&.Mui-selected': {\r\n          backgroundColor: 'rgba(0, 0, 0, 0.24)',\r\n          filter: 'invert(20%)',\r\n          '&:hover': {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.28)',\r\n            filter: 'invert(25%)',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    flex: {\r\n      display: 'flex',\r\n    },\r\n    timerPanel: {\r\n      margin: '0 5px',\r\n    },\r\n    historyPanel: {\r\n      margin: '0 5px',\r\n      position: 'relative',\r\n    },\r\n\r\n    timerTable: {\r\n      width: 'fit-content',\r\n      margin: '0 auto',\r\n    },\r\n    timerLabelCell: {\r\n      flexGrow: 2,\r\n      height: '3rem',\r\n      padding: '1px 5px',\r\n      background: '#FF7F50',\r\n      color: '#FFFFFF',\r\n      textAlign: 'center',\r\n      fontSize: '2rem',\r\n      fontWeight: 'bold',\r\n    },\r\n    timerIconCell: {\r\n      border: 'solid 1px lightgray',\r\n      width: '6rem',\r\n      height: '6rem',\r\n    },\r\n    timeDisplayCell: {\r\n      border: 'solid 1px lightgray',\r\n      width: '10.5rem',\r\n      padding: '0px 10px',\r\n      textAlign: 'center',\r\n      fontSize: '2rem',\r\n      fontWeight: 'bold',\r\n    },\r\n\r\n    settingTriggerTable: {\r\n      width: '80%',\r\n      margin: '0 auto',\r\n    },\r\n    settingStartPanel: {\r\n      width: '95%',\r\n      margin: '0 auto',\r\n    },\r\n    settingnightmarePanel: {\r\n      margin: '0 auto',\r\n    },\r\n    settingOptionalTable: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      width: '85%',\r\n      margin: '0 auto',\r\n      '& .MuiButton-root': {\r\n        minWidth: 'auto', \r\n        width: '40px',\r\n        height: '40px',\r\n        padding: '0px',\r\n        margin: '3px',\r\n        fontSize: '1.6rem',\r\n      },\r\n    },    \r\n    settingClearPanel: {\r\n      margin: '0 0 0 auto',\r\n      '& .MuiButton-root': {\r\n        width: '10rem',\r\n      },\r\n    },\r\n    settingTable: {\r\n      '& > *': {\r\n        marginBottom: theme.spacing(1),\r\n      },\r\n    },\r\n\r\n    timerButton: {\r\n      width: '100%',\r\n      minWidth: '100px',\r\n      height: '5rem',\r\n      fontSize: '1.8rem',\r\n    },\r\n    nightmareButtonIcon: {\r\n      width: '4rem',\r\n      height: '4rem',\r\n    },\r\n  }),\r\n);\r\n\r\nconst TimerTable = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <>\r\n      <h2>コロシアム残り時間</h2>\r\n\r\n      <Paper square className={classes.timerTable}>\r\n        <div className={classes.flex}>\r\n          <Paper variant=\"outlined\" square className={classes.timerLabelCell}>全体時間</Paper>\r\n          <Paper variant=\"outlined\" square className={classes.timeDisplayCell}>{props.coloCountText}</Paper>\r\n        </div>\r\n        <div className={classes.flex}>\r\n          <Paper variant=\"outlined\" square className={classes.timerIconCell}></Paper>\r\n          <div>\r\n            <div className={classes.flex}>\r\n              <Paper variant=\"outlined\" square className={classes.timerLabelCell}>発動</Paper>\r\n              <Paper variant=\"outlined\" square className={classes.timeDisplayCell}>00:00:00</Paper>\r\n            </div>\r\n            <div className={classes.flex}>\r\n              <Paper variant=\"outlined\" square className={classes.timerLabelCell}>終了</Paper>\r\n              <Paper variant=\"outlined\" square className={classes.timeDisplayCell}>__:__:__</Paper>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  )\r\n};\r\n\r\nconst MaretimerTable = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <>\r\n      <h2>タイマー</h2>\r\n      <Paper square className={classes.timerTable}>\r\n        <div className={classes.flex}>\r\n          <Paper variant=\"outlined\" square className={classes.timerLabelCell}>発動時間</Paper>\r\n          <Paper variant=\"outlined\" square className={classes.timeDisplayCell}>{props.readyCountText}</Paper>\r\n        </div>\r\n        <div className={classes.flex}>\r\n          <Paper variant=\"outlined\" square className={classes.timerLabelCell}>終了時間</Paper>\r\n          <Paper variant=\"outlined\" square className={classes.timeDisplayCell}>{props.mareCountText}</Paper>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  )\r\n};\r\n\r\nconst TimerSettingTable = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <>\r\n      <h2>タイマー設定</h2>\r\n      <div className={classes.settingTable}>\r\n        <div className={classes.settingTriggerTable}>\r\n          <ToggleButtonGroup value={props.triggers} onChange={props.handleTriggers} aria-label=\"text formatting\">\r\n            <ToggleButton value=\"short\" aria-label=\"3rdユノ\">\r\n              <Tooltip title={<Typography variant=\"h6\">3rdユノ</Typography>} arrow>\r\n                <SINoImage className={classes.nightmareButtonIcon} data-id='5975' />\r\n              </Tooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value=\"90s\" aria-label=\"ギガース\">\r\n              <Tooltip title={<Typography variant=\"h6\">ギガース</Typography>} arrow>\r\n                <SINoImage className={classes.nightmareButtonIcon} data-id='6324' />\r\n              </Tooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n        <div className={classes.settingStartPanel}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.timerButton}\r\n            startIcon={<TimerIcon />}\r\n            onClick={() => props.handleStartButton()}\r\n            disabled={props.startButtonDisabled}\r\n          >\r\n            ナイトメア準備\r\n          </Button>\r\n        </div>\r\n        <div className={classes.settingOptionalTable}>\r\n          <div>\r\n            <Tooltip title={\r\n                <>\r\n                  <Typography variant=\"h6\">逆刻</Typography>\r\n                  <Typography>選択ナイトメアを準備開始まで巻き戻す。</Typography>\r\n                </>\r\n              } arrow>\r\n              <span>\r\n                <Button variant=\"contained\" disabled={props.optButtonDisabled}>\r\n                  <SINoImage className={classes.nightmareButtonIcon} data-id='6416' />\r\n                </Button>\r\n              </span>\r\n            </Tooltip>\r\n            <Tooltip title={\r\n              <>\r\n                <Typography variant=\"h6\">順刻</Typography>\r\n                <Typography>選択ナイトメアを20秒早める。</Typography>\r\n              </>\r\n            } arrow>\r\n              <span>\r\n                <Button variant=\"contained\" disabled={props.optButtonDisabled}>\r\n                  <SINoImage className={classes.nightmareButtonIcon} data-id='2672' />\r\n                </Button>\r\n              </span>\r\n            </Tooltip>\r\n            <Tooltip title={\r\n              <>\r\n                <Typography variant=\"h6\">微調整</Typography>\r\n                <Typography>1秒の入力遅延を調整する。</Typography>\r\n              </>\r\n            } arrow>\r\n              <span>\r\n                <Button variant=\"contained\" disabled={props.optButtonDisabled}>\r\n                  -1\r\n                </Button>\r\n              </span>\r\n            </Tooltip>\r\n          </div>\r\n          <div className={classes.settingClearPanel}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              startIcon={<DeleteIcon />}\r\n              onClick={() => props.handleClearButton()}\r\n            >\r\n              クリア\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className={classes.settingnightmarePanel}>\r\n          <NightmareTabs\r\n            handleNightmareButton={props.handleNightmareButton}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nconst NightmareTimerTable = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const nowZeroDate = () => {\r\n    const now = new Date();\r\n    now.setHours(0);\r\n    now.setMinutes(0);\r\n    now.setSeconds(0);\r\n    now.setMilliseconds(0);\r\n    return now;\r\n  }\r\n  \r\n  const audio_notification = new Audio(\"../../../assets/sounds/cursor2.mp3\");\r\n  const audio_timeup = new Audio(\"sounds/warning1.mp3\");\r\n      \r\n  //コロシアム残り時間\r\n  const [coloCount, setColoCount] = useState(new Date());\r\n  //発動残り時間\r\n  const [readyCount, setReadyCount] = useState(nowZeroDate());\r\n  //効果残り時間\r\n  const [mareCount, setMareCount] = useState(nowZeroDate());\r\n  //タイマーが起動しているかの判定\r\n  const [startActivate, setStartActivate] = useState(false);\r\n\r\n  //発動・効果タイミング\r\n  const [coloMareTime, setColoMareTime] = useState(['00:00:00', '00:00:00']);\r\n\r\n  //スタートボタン押下時間\r\n  //const [ready, setReady] = useState(new Date());\r\n  //ナイトメア時間情報 @param [mareReady, mareActivate]\r\n  //const [mareTime, setMareTime] = useState<number[]>(() => [0, 0]);\r\n\r\n  //トリガーボタン情報\r\n  const [triggers, setTriggers] = useState<string[]>([]);\r\n  const handleTriggers = (event: React.MouseEvent<HTMLElement>, newTriggers: string[]) => {\r\n    setTriggers(newTriggers);\r\n  };\r\n\r\n  //ボタンDisabled\r\n  const [startButtonDisabled, setStartButtonDisabled] = useState(false);\r\n  const [optButtonDisabled, setOptButtonDisabled] = useState(true);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    const startTime = getCloseColoTime();\r\n    colo_countdown_timer = setInterval(() =>\r\n                        setColoCount(() => colo_countdown(startTime))\r\n                        , 50);\r\n    return () => clearInterval(colo_countdown_timer);\r\n  }, []);\r\n  */\r\n\r\n  useEffect(() => {\r\n    const startTime = getCloseColoTime();\r\n    colo_countdown_timer = setTimeout(setColoCount.bind(null, colo_countdown(startTime)), 50);\r\n    return () => {\r\n      clearTimeout(colo_countdown_timer);\r\n    };\r\n  }, [coloCount]);\r\n\r\n  const getCloseColoTime = () => {\r\n    var now = new Date();\r\n    var time = Number(now.getHours() + \"\" + (\"0\" + now.getMinutes()).slice(-2));\r\n\r\n    if (colo_countdown_timer != null) clearInterval(colo_countdown_timer);\r\n    var startTime;\r\n    if (time <= 820) {\r\n      startTime = \"8:00\";\r\n    } else if (time <= 1250) {\r\n      startTime = \"12:30\";\r\n    } else if (time <= 1820) {\r\n      startTime = \"18:00\";\r\n    } else if (time <= 1920) {\r\n      startTime = \"19:00\";\r\n    } else if (time <= 2020) {\r\n      startTime = \"20:00\";\r\n    } else if (time <= 2120) {\r\n      startTime = \"21:00\";\r\n    } else if (time <= 2220) {\r\n      startTime = \"22:00\";\r\n    } else if (time <= 2320) {\r\n      startTime = \"23:00\";\r\n    } else {\r\n      startTime = \"24:00\";\r\n    }\r\n    return getTimeDate(startTime + \":00:00\");\r\n  }\r\n  \r\n  const getTimeText = (date: Date) => {\r\n    let hh, mm, ss, dd;\r\n    hh = (\"0\" + date.getHours()).slice(-2);\r\n    mm = (\"0\" + date.getMinutes()).slice(-2);\r\n    ss = (\"0\" + date.getSeconds()).slice(-2);\r\n    dd =  (date.getMilliseconds() + \"0\").slice(0, 2);\r\n    return hh + \":\" + mm + \":\" + ss + \":\" + dd;\r\n  }\r\n\r\n  const getTimeDate = (dateValue: string) => {\r\n    const dateArray = dateValue.split(\":\");\r\n\r\n    const date = new Date();\r\n    date.setHours(Number(dateArray[0]));\r\n    date.setMinutes(Number(dateArray[1]));\r\n    date.setSeconds(Number(dateArray[2]));\r\n    date.setMilliseconds(Number(dateArray[3]));\r\n\r\n    return date;\r\n  }\r\n\r\n  //endDateまでの時間\r\n  const getCountdownDate = (endDate: Date) => {\r\n    const now = nowZeroDate();\r\n    now.setTime(now.getTime() + endDate.getTime() - new Date().getTime());\r\n  \r\n    return now;\r\n  }\r\n\r\n  const getEndDate = (endtime: number, date: Date) => {\r\n    const now = new Date(date);\r\n    now.setSeconds(date.getSeconds() + endtime);\r\n\r\n    return now;\r\n  }\r\n\r\n  //コロシアム残り時間\r\n  const colo_countdown = (date: Date) => {\r\n    const endDate = getEndDate(1200, date);\r\n    const count = getCountdownDate(endDate);\r\n\r\n    if (count.getDate() != new Date().getDate()) {\r\n      clearTimeout(colo_countdown_timer);\r\n      return nowZeroDate();\r\n    }\r\n    return count;\r\n  }\r\n\r\n  const tick_tock = () => {\r\n    audio_notification.play();\r\n  }\r\n\r\n  let ready_countdown_bgcolorflg = false;\r\n  let mare_countdown_bgcolorflg = false;\r\n\r\n  const flashBackground = (bgcolor: string, outtime: number) => {\r\n    /*\r\n    $(\"BODY\").animate({ backgroundColor: bgcolor }, 50, function() {\r\n      $(this).animate({ backgroundColor: \"#ffffff\" }, outtime);\r\n    });\r\n    */\r\n  }\r\n\r\n  //readyカウントダウン\r\n  const ready_countdown = () => {\r\n    var endDate = getEndDate(mareTime[0], ready);\r\n    var count = getCountdownDate(endDate);\r\n\r\n    \r\n    if (count.getDate() != new Date().getDate()) {\r\n      clearInterval(ready_countdown_timer);\r\n      setReadyCount(() => nowZeroDate());\r\n      \r\n      //flashBackground(start_bgcolor, 500);\r\n      //ready_countdown_bgcolorflg = false;\r\n      \r\n      //clearInterval(ready_tick_timer);\r\n      //$(\"#audio2\").get(0).play();\r\n    } else {\r\n      setReadyCount(count);\r\n\r\n      var m, s;\r\n      m = count.getMinutes() * 60;\r\n      s = count.getSeconds();\r\n      if (m + s == 10 && ready_countdown_bgcolorflg == false) {\r\n        //flashBackground(start_bgcolor, 50);\r\n        ready_countdown_bgcolorflg = true;\r\n        \r\n        tick_tock();\r\n        //ready_tick_timer = setInterval(tick_tock, 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  //メアカウントダウン\r\n  const mare_countdown = () => {\r\n    var endDate = getEndDate(mareTime[0] + mareTime[1], ready);\r\n    var count = getCountdownDate(endDate);\r\n\r\n    if (count.getDate() != new Date().getDate()) {\r\n      setStartButtonDisabled(false);\r\n      setOptButtonDisabled(true);\r\n      setTriggers([]);\r\n\r\n      clearInterval(mare_countdown_timer);\r\n      setMareCount(() => nowZeroDate());\r\n\r\n      //flashBackground(mare_bgcolor, 500);\r\n      //mare_countdown_bgcolorflg = false;\r\n      \r\n      //clearInterval(mare_tick_timer);\r\n      //$(\"#audio2\").get(0).play();\r\n    } else {\r\n      setMareCount(count);\r\n\r\n      var m, s;\r\n      m = count.getMinutes() * 60;\r\n      s = count.getSeconds();\r\n      if (m + s == 10 && mare_countdown_bgcolorflg == false) {\r\n        //flashBackground(mare_bgcolor, 50);\r\n        mare_countdown_bgcolorflg = true;\r\n        \r\n        tick_tock();\r\n        //mare_tick_timer = setInterval(tick_tock, 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStartButton = () => {\r\n    setStartActivate(true);\r\n    //last_time_act = last_time;\r\n\r\n    //setReady(now);\r\n    ready = new Date();\r\n    \r\n    tick_tock();\r\n\r\n    if (ready_countdown_timer != null) clearInterval(ready_countdown_timer);\r\n    if (mare_countdown_timer != null) clearInterval(mare_countdown_timer);\r\n\r\n    setStartButtonDisabled(true);\r\n    setOptButtonDisabled(false);\r\n  }\r\n\r\n  const handleClearButton = () => {\r\n    const initTime = nowZeroDate();\r\n    setReadyCount(initTime);\r\n    setMareCount(initTime);\r\n    //setReady(initTime);\r\n    //setMareTime([0, 0]);\r\n    ready = new Date();\r\n    mareTime = [0, 0];\r\n    setStartActivate(false);\r\n\r\n    if (ready_countdown_timer != null) clearInterval(ready_countdown_timer);\r\n    if (mare_countdown_timer != null) clearInterval(mare_countdown_timer);\r\n    \r\n    setStartButtonDisabled(false);\r\n    setOptButtonDisabled(true);\r\n    setTriggers([]);\r\n  }\r\n\r\n  const handleNightmareButton = (e: React.MouseEvent<HTMLElement>) => {\r\n    if (startActivate === false)  ready = new Date;\r\n    setStartActivate(true);\r\n\r\n    const mareReady = triggers.indexOf('90s') !== -1 ? 90 :\r\n                      triggers.indexOf('short') !== -1 ? 5 :\r\n                      e.currentTarget.dataset.ready === undefined ? 0 : +e.currentTarget.dataset.ready;\r\n    const mareActivate = e.currentTarget.dataset.activate === undefined ? 0 : +e.currentTarget.dataset.activate;\r\n\r\n    //setMareTime([mareReady, mareActivate]);\r\n    mareTime = [mareReady, mareActivate];\r\n    \r\n    if (ready_countdown_timer != null) clearInterval(ready_countdown_timer);\r\n    if (mare_countdown_timer != null) clearInterval(mare_countdown_timer);\r\n\r\n    ready_countdown_timer = setInterval(ready_countdown, 100);\r\n    mare_countdown_timer = setInterval(mare_countdown, 100);\r\n    \r\n    setStartButtonDisabled(true);\r\n    setOptButtonDisabled(false);\r\n\r\n    /*  発動・効果タイミング\r\n    var countText_now = getTimeText(getEndDate(-1, last_time_act));\r\n    var countText_ready = getTimeText(getEndDate(ready * -1 - 1, last_time_act));\r\n    var countText_end = getTimeText(getEndDate((ready + activate) * -1 - 1, last_time_act));\r\n\r\n    $(\"#next_icon\").attr(\"src\", \"https://sinoalice.game-db.tw/images/card/CardS\" + $(this).data(\"id\") + \".png\");\r\n    $(\"#next_ready\").html(countText_ready);\r\n    $(\"#next_end\").html(countText_end);\r\n    */\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.timerPanel}>\r\n          <TimerTable\r\n            coloCountText={getTimeText(coloCount).slice(0,8)}\r\n          />\r\n          <MaretimerTable\r\n            readyCountText={getTimeText(readyCount).slice(0,8)}\r\n            mareCountText={getTimeText(mareCount).slice(0,8)}\r\n          />\r\n          <TimerSettingTable\r\n            triggers={triggers}\r\n            handleTriggers={handleTriggers}\r\n            optButtonDisabled={optButtonDisabled}\r\n            startButtonDisabled={startButtonDisabled}\r\n            handleStartButton={handleStartButton}\r\n            handleClearButton={handleClearButton}\r\n            handleNightmareButton={handleNightmareButton}\r\n          />\r\n        </div>\r\n        <div className={classes.historyPanel}>\r\n          <h2>発動履歴</h2>\r\n\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  )\r\n};\r\n\r\n//スマホのとき、Tabを召喚しhistoryを投げつける\r\n//timeline表示→出力（タイムテーブルで扱えるurl形式）\r\n\r\nexport default NightmareTimerTable;"],"sourceRoot":""}