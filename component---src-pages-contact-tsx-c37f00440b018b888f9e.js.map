{"version":3,"sources":["webpack:///./src/pages/contact.tsx","webpack:///./node_modules/@material-ui/icons/Mail.js"],"names":["useStyles","makeStyles","createStyles","root","display","appBar","transition","theme","easing","duration","leavingScreen","appBarShift","width","marginLeft","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","justifyContent","content","flexGrow","contentShift","path","className","classes","useTheme","React","open","setOpen","position","clsx","color","aria-label","onClick","edge","variant","noWrap","anchor","paper","button","key","primary","map","text","index","title","pathname","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","d"],"mappings":"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","file":"component---src-pages-contact-tsx-c37f00440b018b888f9e.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { SEO } from 'src/components';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NestedList from 'src/layouts/Header/nested-list';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  }),\r\n);\r\n\r\nconst Contact = ({ path, className }: { path: string, className: string }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Persistent drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key='ダメージ計算'>\r\n            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n            <ListItemText primary='ダメージ計算'/>\r\n          </ListItem>\r\n          <ListItem button key='バフデバフ計算'>\r\n            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n            <ListItemText primary='バフデバフ計算'/>\r\n          </ListItem>\r\n          <ListItem button key='回復計算'>\r\n            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n            <ListItemText primary='回復計算'/>\r\n          </ListItem>\r\n          <ListItem button key='シップ計算'>\r\n            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n            <ListItemText primary='シップ計算'/>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <NestedList />\r\n      </Drawer>\r\n      <SEO title='Contact' pathname={path} />\r\n      <main\r\n        className={clsx(className, classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <NestedList />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Mail');\n\nexports.default = _default;"],"sourceRoot":""}